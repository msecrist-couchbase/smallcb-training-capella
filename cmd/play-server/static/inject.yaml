backup/repositories:
 -
  args: scenarioBucket scenarioZoom scenario
  samp: scenarioBucket=beer-sample scenarioZoom=minute scenario=7xv5w6opc
  titles:
   -
    title: Backup Ad
    querySelectorAll: main .main-content ui-view .error
    check: x.innerText.trim().startsWith('The backup interface is only available on Couchbase clusters running the backup service.')
    replace: |
     <div style="color: #555;">
     This playground installation doesn't support Couchbase Backups.
     <br/><br/>
     To try out the Backups feature, please try the
     <a href="https://cloud.couchbase.com" target="_blank">Couchbase Cloud</a>
     or install Couchbase Server from a
     <a href="https://www.couchbase.com/downloads" target="_blank">Download</a>.
     </div>

buckets:
 -
  args: scenarioBucket scenarioZoom scenario
  samp: scenarioBucket=beer-sample scenarioZoom=minute scenario=7xv5w6opc
  titles:
   -
    title: Bucket Create
    docs: https://docs.couchbase.com/server/current/manage/manage-buckets/create-bucket.html
    querySelectorAll: |
      body.modal-open .panel.dialog .panel-header > h2[ng-show="bucketsDetailsDialogCtl.bucketConf.isNew"]
    check: x.innerText.trim() == 'Add Data Bucket' && x.className != "ng-hide"
    items:
     -
      item: Command-line
      tmpl: |
        /opt/couchbase/bin/couchbase-cli bucket-create \\
          --cluster ${HOST} \\
          --username ${USER} \\
          --password ${PSWD} \\
          --bucket '${q('input[ng-model="bucketConf.name"]').value || 'BUCKET_NAME'}' \\
          --bucket-ramsize ${q('input[ng-model="bucketConf.ramQuotaMB"]').value || '1024'} \\
          ${q('input[type="radio"]#for-bucket-type-membase').checked ?
            '--bucket-type couchbase \\' : ''}
          ${q('input[type="radio"]#for-bucket-type-memcached').checked ?
            '--bucket-type memcached \\' : ''}
          ${q('input[type="radio"]#for-bucket-type-ephemeral').checked ?
            '--bucket-type ephemeral \\' : ''}
          ${q('input[type="checkbox"]#for-enable-replicas').checked ?
            '--bucket-replica '
             + q('form select[name="replicaNumber"]').value.split(':')[1] + ' \\' : ''}
          ${q('input[type="checkbox"]#for-enable-view-replicas').checked ?
            '--enable-index-replica 1 \\' : ''}
          ${q('input[type="checkbox"]#enable_bucket_ttl').checked ?
            '--max-ttl '
             + (q('form input[ng-model="bucketConf.maxTTL"]').value || '0') + ' \\' : ''}
          ${q('input[type="radio"]#for-comp-mode-off').checked ?
            '--compression-mode off \\' : ''}
          ${q('input[type="radio"]#for-comp-mode-active').checked ?
            '--compression-mode active \\' : ''}
          ${q('input[type="radio"]#for-conflict-resolution-lww').checked ?
            '--conflict-resolution timestamp \\' : ''}
          ${q('input[name="evictionPolicy"]#for-metadata-full-eject').checked ?
            '--bucket-eviction-policy fullEviction \\' : ''}
          ${q('input[name="evictionPolicyEphemeral"]#for-metadata-value-eject').checked ?
            '--bucket-eviction-policy noEviction \\' : ''}
          ${q('input[name="evictionPolicyEphemeral"]#for-metadata-full-eject').checked ?
            '--bucket-eviction-policy nruEviction \\' : ''}
          ${q('input#metadata-purge-frequency').value != '3' ?
            '--purge-interval '
             + (q('input#metadata-purge-frequency').value || '3') + ' \\' : ''}
          ${q('input[type="radio"]#for-bucket-type-memcached').checked == false &&
            q('input[type="radio"]#for-high-threads').checked ?
            '--bucket-priority high \\' : ''}
          ${q('select[ng-model="bucketConf.durabilityMinLevel"]').value != 'none' ?
            '--durability-min-level '
             + q('select[ng-model="bucketConf.durabilityMinLevel"]').value + ' \\' : ''}
          ${q('input[type="checkbox"]#for-auto-compaction-override').checked &&
            q('input[type="checkbox"]#for-data-frag-percent').checked ?
            '--database-fragmentation-threshold-percentage '
             + (q('input[ng-model="autoCompactionSettings.databaseFragmentationThreshold.percentage"]').value || 0) + ' \\' : ''}
          ${q('input[type="checkbox"]#for-auto-compaction-override').checked &&
            q('input[type="checkbox"]#for-data-frag-size').checked ?
            '--database-fragmentation-threshold-size '
             + (q('input[ng-model="autoCompactionSettings.databaseFragmentationThreshold.size"]').value || 0) + ' \\' : ''}
          ${q('input[type="checkbox"]#for-auto-compaction-override').checked &&
            q('input[type="checkbox"]#for-view-frag-percent').checked ?
            '--view-fragmentation-threshold-percentage '
             + (q('input[ng-model="autoCompactionSettings.viewFragmentationThreshold.percentage"]').value || 0) + ' \\' : ''}
          ${q('input[type="checkbox"]#for-auto-compaction-override').checked &&
            q('input[type="checkbox"]#for-view-frag-size').checked ?
            '--view-fragmentation-threshold-size '
             + (q('input[ng-model="autoCompactionSettings.viewFragmentationThreshold.size"]').value || 0) + ' \\' : ''}
          ${q('input[type="checkbox"]#for-auto-compaction-override').checked &&
            q('input[type="checkbox"]#for-enable-compaction-timeperiod').checked ?
            '--from-hour '
             + (q('input[ng-model="autoCompactionSettings[mnPeriod].fromHour"]').value || 0) + ' \\\n' +
            '  --from-minute '
             + (q('input[ng-model="autoCompactionSettings[mnPeriod].fromMinute"]').value || 0) + ' \\\n' +
            '  --to-hour '
             + (q('input[ng-model="autoCompactionSettings[mnPeriod].toHour"]').value || 0) + ' \\\n' +
            '  --to-minute '
             + (q('input[ng-model="autoCompactionSettings[mnPeriod].toMinute"]').value || 0) + ' \\' : ''}
          ${q('input[type="checkbox"]#for-auto-compaction-override').checked &&
            q('input[type="checkbox"]#for-compact-abort-outside-allowedTimePeriod').checked ?
            '--abort-outside 1 \\' : ''}
          ${q('input[type="checkbox"]#for-auto-compaction-override').checked &&
            q('input[type="checkbox"]#for-compact-parallel').checked ?
            '--parallel-db-view-compaction 1 \\' : ''}
          ${q('input[type="checkbox"]#for-enable-flush').checked ?
            '--enable-flush 1 \\' : ''}
          ${q('input[type="radio"]#for-storage-backend-magma').checked ?
            '--storage-backend magma \\' : ''}
   -
    title: Bucket Edit
    docs: https://docs.couchbase.com/server/current/manage/manage-buckets/edit-bucket.html
    querySelectorAll: |
      body.modal-open .panel.dialog .panel-header > h2[ng-show="!bucketsDetailsDialogCtl.bucketConf.isNew"]
    check: x.innerText.trim() == 'Edit Bucket Settings' && x.className != "ng-hide"
    items:
     -
      item: Command-line
      tmpl: |
        /opt/couchbase/bin/couchbase-cli bucket-edit \\
          --cluster ${HOST} \\
          --username ${USER} \\
          --password ${PSWD} \\
          --bucket '${q('input[ng-model="bucketConf.name"]').value || 'BUCKET_NAME'}' \\
          --bucket-ramsize ${q('input[ng-model="bucketConf.ramQuotaMB"]').value || '1024'} \\
          ${q('input[type="checkbox"]#for-enable-replicas').checked ?
            '--bucket-replica '
             + q('form select[name="replicaNumber"]').value.split(':')[1] + ' \\' : ''}
          ${q('input[type="checkbox"]#enable_bucket_ttl').checked ?
            '--max-ttl '
             + (q('form input[ng-model="bucketConf.maxTTL"]').value || '0') + ' \\' : ''}
          ${q('input[type="radio"]#for-comp-mode-off').checked ?
            '--compression-mode off \\' : ''}
          ${q('input[type="radio"]#for-comp-mode-active').checked ?
            '--compression-mode active \\' : ''}
          ${q('input[name="evictionPolicy"]#for-metadata-full-eject').checked ?
            '--bucket-eviction-policy fullEviction \\' : ''}
          ${q('input[name="evictionPolicyEphemeral"]#for-metadata-value-eject').checked ?
            '--bucket-eviction-policy noEviction \\' : ''}
          ${q('input[name="evictionPolicyEphemeral"]#for-metadata-full-eject').checked ?
            '--bucket-eviction-policy nruEviction \\' : ''}
          ${q('input#metadata-purge-frequency').value != '3' ?
            '--purge-interval '
             + (q('input#metadata-purge-frequency').value || '3') + ' \\' : ''}
          ${q('input[type="radio"]#for-bucket-type-memcached').checked == false &&
            q('input[type="radio"]#for-high-threads').checked ?
            '--bucket-priority high \\' : ''}
          ${q('select[ng-model="bucketConf.durabilityMinLevel"]').value != 'none' ?
            '--durability-min-level '
             + q('select[ng-model="bucketConf.durabilityMinLevel"]').value + ' \\' : ''}
          ${q('input[type="checkbox"]#for-auto-compaction-override').checked &&
            q('input[type="checkbox"]#for-data-frag-percent').checked ?
            '--database-fragmentation-threshold-percentage '
             + (q('input[ng-model="autoCompactionSettings.databaseFragmentationThreshold.percentage"]').value || 0) + ' \\' : ''}
          ${q('input[type="checkbox"]#for-auto-compaction-override').checked &&
            q('input[type="checkbox"]#for-data-frag-size').checked ?
            '--database-fragmentation-threshold-size '
             + (q('input[ng-model="autoCompactionSettings.databaseFragmentationThreshold.size"]').value || 0) + ' \\' : ''}
          ${q('input[type="checkbox"]#for-auto-compaction-override').checked &&
            q('input[type="checkbox"]#for-view-frag-percent').checked ?
            '--view-fragmentation-threshold-percentage '
             + (q('input[ng-model="autoCompactionSettings.viewFragmentationThreshold.percentage"]').value || 0) + ' \\' : ''}
          ${q('input[type="checkbox"]#for-auto-compaction-override').checked &&
            q('input[type="checkbox"]#for-view-frag-size').checked ?
            '--view-fragmentation-threshold-size '
             + (q('input[ng-model="autoCompactionSettings.viewFragmentationThreshold.size"]').value || 0) + ' \\' : ''}
          ${q('input[type="checkbox"]#for-auto-compaction-override').checked &&
            q('input[type="checkbox"]#for-enable-compaction-timeperiod').checked ?
            '--from-hour '
             + (q('input[ng-model="autoCompactionSettings[mnPeriod].fromHour"]').value || 0) + ' \\\n' +
            '  --from-minute '
             + (q('input[ng-model="autoCompactionSettings[mnPeriod].fromMinute"]').value || 0) + ' \\\n' +
            '  --to-hour '
             + (q('input[ng-model="autoCompactionSettings[mnPeriod].toHour"]').value || 0) + ' \\\n' +
            '  --to-minute '
             + (q('input[ng-model="autoCompactionSettings[mnPeriod].toMinute"]').value || 0) + ' \\' : ''}
          ${q('input[type="checkbox"]#for-auto-compaction-override').checked &&
            q('input[type="checkbox"]#for-compact-abort-outside-allowedTimePeriod').checked ?
            '--abort-outside 1 \\' : ''}
          ${q('input[type="checkbox"]#for-auto-compaction-override').checked &&
            q('input[type="checkbox"]#for-compact-parallel').checked ?
            '--parallel-db-view-compaction 1 \\' : ''}
          ${q('input[type="checkbox"]#for-enable-flush').checked ?
            '--enable-flush 1 \\' : ''}
   -
    title: Bucket Delete
    docs: https://docs.couchbase.com/server/current/manage/manage-buckets/delete-bucket.html
    querySelectorAll: |
      body.modal-open .panel.dialog .panel-header > h2
    check: x.innerText.trim() == 'Confirm Drop Bucket'
    items:
     -
      item: Command-line
      tmpl: |
        /opt/couchbase/bin/couchbase-cli bucket-delete \\
          --cluster ${HOST} \\
          --username ${USER} \\
          --password ${PSWD} \\
          --bucket '${q('body.modal-open .panel.dialog .panel-content strong.ng-binding').innerText || 'BUCKET_NAME'}'
   -
    title: Bucket List
    querySelectorAll: |
      body header h1 span.ng-binding
    check: x.innerText.trim().startsWith('Buckets')
    items:
     -
      item: Command-line
      docs: https://docs.couchbase.com/server/current/cli/cbcli/couchbase-cli-bucket-list.html
      tmpl: |
        /opt/couchbase/bin/couchbase-cli bucket-list \\
          --cluster ${HOST} \\
          --username ${USER} \\
          --password ${PSWD}
     -
      item: More on bucket management
      docs: https://docs.couchbase.com/server/current/manage/manage-buckets/bucket-management-overview.html
 -
  args: scenarioBucket scenarioZoom scenario openedBucket
  samp: scenarioBucket=beer-sample scenarioZoom=minute scenario=7xv5w6opc openedBucket=beer-sample

cbas/workbench:
 -
  args: scenarioBucket scenarioZoom scenario
  samp: scenarioBucket=beer-sample scenarioZoom=minute scenario=7xv5w6opc
  titles:
   -
    title: Analytics Ad
    querySelectorAll: main .main-content .ng-scope .error
    check: x.innerText.trim().startsWith('The analytics interface is only available on Couchbase clusters running the analytics service.')
    replace: |
     <div style="color: #555;">
     This playground installation doesn't support Couchbase Analytics.
     <br/><br/>
     To try out the Analytics feature, please try the
     <a href="https://cloud.couchbase.com" target="_blank">Couchbase Cloud</a>
     or install Couchbase Server from a
     <a href="https://www.couchbase.com/downloads" target="_blank">Download</a>.
     </div>

collections:
 -
  args: scenarioBucket scenarioZoom scenario collectionsBucket scopesPage collsPage
  samp: scenarioBucket=beer-sample scenarioZoom=minute scenario=7xv5w6opc collectionsBucket=beer-sample scopesPage=%7B%22page%22:1,%22size%22:10%7D collsPage=%7B%7D
 -
  args: scenarioBucket scenarioZoom scenario collectionsBucket scopeDetails scopesPage collsPage
  samp: scenarioBucket=beer-sample scenarioZoom=minute scenario=7xv5w6opc collectionsBucket=beer-sample scopeDetails=_default scopesPage=%7B%22page%22:1,%22size%22:10%7D collsPage=%7B%22size%22:10,%22page%22:1,%22_defaults%22:10,%22_defaultp%22:1%7D

docs/editor:
 -
  args: scenarioBucket scenarioZoom scenario
  samp: scenarioBucket=beer-sample scenarioZoom=minute scenario=7xv5w6opc

docs/import:
 -
  args: scenarioBucket scenarioZoom scenario
  samp: scenarioBucket=beer-sample scenarioZoom=minute scenario=7xv5w6opc

eventing/summary:
 -
  args: scenarioBucket scenarioZoom scenario
  samp: scenarioBucket=beer-sample scenarioZoom=minute scenario=7xv5w6opc
  titles:
   -
    title: Eventing Ad
    querySelectorAll: main .main-content div[ui-view=""] p
    check: x.innerText.trim().startsWith('The eventing interface is only available on Couchbase clusters running the eventing service.')
    replace: |
     <div style="color: #555;">
     This playground installation doesn't support Couchbase Eventing.
     <br/><br/>
     To try out Eventing, please try the
     <a href="https://cloud.couchbase.com" target="_blank">Couchbase Cloud</a>
     or install Couchbase Server from a
     <a href="https://www.couchbase.com/downloads" target="_blank">Download</a>.
     </div>
   -
    title: Eventing Ad
    querySelectorAll: main .main-content div[ui-view=""] p
    check: x.innerText.trim().startsWith('No Eventing nodes were found on this cluster.')
    replace:

fts/fts_list:
 -
  args: scenarioBucket scenarioZoom scenario
  samp: scenarioBucket=beer-sample scenarioZoom=minute scenario=7xv5w6opc

fts/fts_new/:
 -
  args: scenarioBucket scenarioZoom scenario indexType sourceType
  samp: scenarioBucket=beer-sample scenarioZoom=minute scenario=7xv5w6opc indexType=fulltext-index sourceType=couchbase

fts/fts_new_alias/:
 -
  args: scenarioBucket scenarioZoom scenario indexType sourceType
  samp: scenarioBucket=beer-sample scenarioZoom=minute scenario=7xv5w6opc indexType=fulltext-alias sourceType=nil

fts/fts_new_easy/:
 -
  args: scenarioBucket scenarioZoom scenario indexType sourceType
  samp: scenarioBucket=beer-sample scenarioZoom=minute scenario=7xv5w6opc indexType=fulltext-index sourceType=couchbase

index:
 -
  args: scenarioBucket scenarioZoom scenario
  samp: scenarioBucket=beer-sample scenarioZoom=minute scenario=7xv5w6opc
 -
  args: scenarioBucket scenarioZoom scenario openedIndex
  samp: scenarioBucket=beer-sample scenarioZoom=minute scenario=7xv5w6opc openedIndex=1604764542166554800010467320481902103000127.0.0.1:8091

logs:
 -
  args: scenarioBucket scenarioZoom scenario
  samp: scenarioBucket=beer-sample scenarioZoom=minute scenario=7xv5w6opc

logs/collectInfo/form:
 -
  args: scenarioBucket scenarioZoom scenario
  samp: scenarioBucket=beer-sample scenarioZoom=minute scenario=7xv5w6opc

query/monitoring:
 -
  args: scenarioBucket scenarioZoom scenario
  samp: scenarioBucket=beer-sample scenarioZoom=minute scenario=7xv5w6opc

query/workbench:
 -
  args: scenarioBucket scenarioZoom scenario
  samp: scenarioBucket=beer-sample scenarioZoom=minute scenario=7xv5w6opc

replications:
 -
  args: scenarioBucket scenarioZoom scenario
  samp: scenarioBucket=beer-sample scenarioZoom=minute scenario=7xv5w6opc

security/audit:
 -
  args: scenarioBucket scenarioZoom scenario
  samp: scenarioBucket=beer-sample scenarioZoom=minute scenario=7xv5w6opc

security/clientCert:
 -
  args: scenarioBucket scenarioZoom scenario
  samp: scenarioBucket=beer-sample scenarioZoom=minute scenario=7xv5w6opc

security/redaction:
 -
  args: scenarioBucket scenarioZoom scenario
  samp: scenarioBucket=beer-sample scenarioZoom=minute scenario=7xv5w6opc

security/rolesGroups:
 -
  args: scenarioBucket scenarioZoom scenario sortBy order substr pageSize
  samp: scenarioBucket=beer-sample scenarioZoom=minute scenario=7xv5w6opc sortBy=id order=asc substr= pageSize=20

security/rootCertificate:
 -
  args: scenarioBucket scenarioZoom scenario
  samp: scenarioBucket=beer-sample scenarioZoom=minute scenario=7xv5w6opc

security/session:
 -
  args: scenarioBucket scenarioZoom scenario
  samp: scenarioBucket=beer-sample scenarioZoom=minute scenario=7xv5w6opc

security/userRoles:
 -
  args: scenarioBucket scenarioZoom scenario sortBy order substr pageSize
  samp: scenarioBucket=beer-sample scenarioZoom=minute scenario=7xv5w6opc sortBy=id order=asc substr= pageSize=20

settings/alerts:
 -
  args: scenarioBucket scenarioZoom scenario
  samp: scenarioBucket=beer-sample scenarioZoom=minute scenario=7xv5w6opc

settings/autoCompaction:
 -
  args: scenarioBucket scenarioZoom scenario
  samp: scenarioBucket=beer-sample scenarioZoom=minute scenario=7xv5w6opc

settings/cluster:
 -
  args: scenarioBucket scenarioZoom scenario
  samp: scenarioBucket=beer-sample scenarioZoom=minute scenario=7xv5w6opc

settings/sampleBuckets:
 -
  args: scenarioBucket scenarioZoom scenario
  samp: scenarioBucket=beer-sample scenarioZoom=minute scenario=7xv5w6opc
  titles:
   -
    title: Sample Buckets loading
    docs: https://docs.couchbase.com/server/current/manage/manage-settings/install-sample-buckets.html
    querySelectorAll: |
      form.forms div[ng-repeat="bucket in settingsSampleBucketsCtl.state.available"] label,
      form.forms div[ng-repeat="bucket in settingsSampleBucketsCtl.state.installed"]
    items:
     -
      item: Command-line
      tmpl: |
       /opt/couchbase/bin/cbimport json --format sample \\
         -c ${HOST} -u ${USER} -p ${PSWD} -b ${x.innerText.trim()} \\
         -d file:///opt/couchbase/samples/${x.innerText.trim()}.zip
    helpLinkAsLastSibling: |
      form[ng-submit="settingsSampleBucketsCtl.installSampleBuckets()"] button[type="submit"]

views:
 -
  args: scenarioBucket scenarioZoom scenario bucket type
  samp:
   - scenarioBucket=beer-sample scenarioZoom=minute scenario=7xv5w6opc bucket=beer-sample type=development
   - scenarioBucket=beer-sample scenarioZoom=minute scenario=7xv5w6opc bucket=beer-sample type=production
