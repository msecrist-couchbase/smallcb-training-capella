title: Connect Multiple Locations with Data Streaming

containers: 2

panels:
 -
  id: w-cluster
  title: west cluster
  title-more: "username: ${s[0].CBUser} &nbsp;&nbsp; password: ${s[0].CBPswd}"
  color: "#CC2A2E;"
  iframe-src: http://${document.location.hostname}:${s[0].ContainerPortBase}/ui/index.html?lu=${s[0].CBUser}&lp=${s[0].CBPswd}
  init: |
   setTimeout(function() {
     var code = `#!/bin/sh
     /opt/couchbase/bin/couchbase-cli cluster-edit -c 127.0.0.1 -u ${s[0].CBUser} -p ${s[0].CBPswd} --cluster-name WEST
     /opt/couchbase/bin/couchbase-cli bucket-delete -c 127.0.0.1 -u ${s[0].CBUser} -p ${s[0].CBPswd} --bucket travel-sample
     `;
     fetch(`/run?s=${s[0].SessionId}&lang=sh&code=${encodeURIComponent(code)}`);
   }, 3000);
  init-tell:
   styles-keep: |
    @keyframes playg-animated-underline {
      0% {
        text-decoration: underline red 3px;
      }
      70% {
        text-decoration: underline transparent 3px;
      }
      100% {
        text-decoration: underline transparent 3px;
      }
    }
    @keyframes playg-animated-border {
      0% {
        border: 2px solid red;
      }
      70% {
        border: 2px solid #4287d6;
      }
      100% {
        border: 2px solid #4287d6;
      }
    }
 -
  id: e-cluster
  title: east cluster
  title-more: "username: ${s[1].CBUser} &nbsp;&nbsp; password: ${s[1].CBPswd}"
  color: "#4287D6;"
  iframe-src: http://${document.location.hostname}:${s[1].ContainerPortBase}/ui/index.html?lu=${s[1].CBUser}&lp=${s[1].CBPswd}
  init: |
   setTimeout(function() {
     var code = `#!/bin/sh
     /opt/couchbase/bin/couchbase-cli cluster-edit -c 127.0.0.1 -u ${s[1].CBUser} -p ${s[1].CBPswd} --cluster-name EAST
     /opt/couchbase/bin/couchbase-cli bucket-delete -c 127.0.0.1 -u ${s[1].CBUser} -p ${s[1].CBPswd} --bucket beer-sample
     /opt/couchbase/bin/couchbase-cli bucket-delete -c 127.0.0.1 -u ${s[1].CBUser} -p ${s[1].CBPswd} --bucket travel-sample
     `;
     fetch(`/run?s=${s[1].SessionId}&lang=sh&code=${encodeURIComponent(code)}`);
   }, 3000);
  init-tell:
   styles-keep: |
    @keyframes playg-animated-underline {
      0% {
        text-decoration: underline red 3px;
      }
      70% {
        text-decoration: underline transparent 3px;
      }
      100% {
        text-decoration: underline transparent 3px;
      }
    }
 -
  id: end

diagram:
 height: 50px
 content: |
  <div class="diagram-more west-east-connect"
       style="display: none; position: absolute; top: 29px; left: 200px; width: 55px; height: 2px;"></div>

  <div class="diagram-more west-east-stream animated-stream"
       style="display: none; position: absolute; top: 27px; left: 205px; width: 44px; height: 6px;"></div>

  <div class="west-east-check"
       style="display: none; position: absolute; top: 9px; left: 222px; width: 2rem; height: 1rem; color: #80c677;">&check;</div>

  <style>
    .animated-stream {
      background: linear-gradient(-90deg, #4287D6, white);
      background-repeat: repeat-x;
      background-size: 15px 6px;
      animation: animated-stream 4s infinite linear;
    }
    @keyframes animated-stream {
      0% {
        background-position: 0px 0px;
      }
      100% {
        background-position: 44px 0px;
      }
    }

    @keyframes animated-background {
      0% {
        background-color: initial;
      }
      90% {
        background-color: #f0d0d0;
      }
      100% {
        background-color: initial;
      }
    }
  </style>

  <label for="w-cluster"
         class="title background-color-white"
         style="top: 10px; width: 12em; height: 35px;">
    <img src="./img/cb-icon-red.png"
         style="top: 2px; left: 2px; width: 30px;"/>
    <div style="top: 5px; left: 36px; font-size: 0.82em; font-weight: bold; color: #333;">
      Couchbase Cluster
      <span style="color: #CC2A2E;">WEST</span>
      <div style="font-size: 0.75em; font-weight: normal;">${s[0].ContainerIP}</div>
    </div>
  </label>

  <label for="e-cluster"
         class="title background-color-white"
         style="top: 10px; left: 250px; width: 12em; height: 35px;">
    <img src="./img/cb-icon-blue.png"
         style="top: 2px; left: 2px; width: 30px;"/>
    <div style="top: 5px; left: 36px; font-size: 0.82em; font-weight: bold; color: #333;">
      Couchbase Cluster
      <span style="color: #4287D6;">EAST</span>
      <div style="font-size: 0.75em; font-weight: normal;">${s[1].ContainerIP}</div>
    </div>
  </label>

  <div id="diagram-overlay" style="display: none;"></div>

steps:
 -
  title: Welcome
  panel: none
  content: |
   <div>
    Mission-critical applications
    are often distributed across
    multiple locations and clouds
    <br/>
    and are connected by <b>data&nbsp;streams</b>.
   </div>
   <div>
    It is <i>easy</i> to create
    data&nbsp;streams
    between Couchbase clusters.
   </div>
   <div>
    Let's see how to do it...
   </div>
   <div class="left-bottom" style="margin-bottom: -0.8rem;">
    <br/>
    <br/>
    <br/>
    <h3>&nbsp&nbsp&nbsp;&nbsp;&nbsp;&nbsp&nbsp&nbsp&nbsp;Begin Here
        <div style="display: inline-block; transform-origin: left center; transform: translateY(8px) rotateZ(55deg) scale(1.5, 1.2); color: #f33;">
          &#x279E;
        </div>
    </h3>
   </div>

   <style>
     main.step-0 .right .diagram #diagram-overlay {
       display: block !important;
       position: absolute;
       width: 600px;
       height: 50px;
       background: white;
       opacity: 0.4;
       z-index: 1;
     }
     main.step-0 .right .diagram .west-east-stream {
       display: block !important;
     }
   </style>
 -
  title: Your mission
  content: |
   <div>
    <p>Create a <b>data&nbsp;stream</b>
       in a <i>west</i>&nbsp;cluster
       that'll send data
       to an <i>east</i>&nbsp;cluster.
    <p>Also, <b>mutate</b> data in the <i>west</i> and
       watch your mutation replicate over to the <i>east</i>.
    </p>
   </div>
   <div>
    <h3>On the right&nbsp;
        <div style="display: inline-block; transform-origin: left center; transform: scaleX(5);">
          &#x279E;
        </div>
    </h3>
    <ul>
     <li>There are 2 active clusters:
         <br/>
         <i>west</i> and <i>east</i>
         <br/><br/>
     </li>
     <li><b>Click</b> on their icons to
         open up their admin interfaces.
     </li>
    </ul>
   </div>

   <style>
     main.step-your-mission article .right .diagram label {
       border: 1px solid red;
       animation: animated-background 1.5s infinite linear;
     }

     .container.saw-w-cluster main.step-your-mission article .right .diagram label[for="w-cluster"],
     .container.saw-e-cluster main.step-your-mission article .right .diagram label[for="e-cluster"] {
       border: 1px solid #aaa;
       animation: none;
     }

     main.step-your-mission .step-nav button.next {
       z-index: -1;
       opacity: 0.1;
     }

     .container.saw-w-cluster.saw-e-cluster main.step-your-mission .step-nav button.next {
       z-index: 0;
       opacity: initial;
     }
   </style>
 -
  title: Destination east
  panel: e-cluster
  panel-tell:
   clicks:
    - "nav.nav-sidebar a[mn-tab=buckets]"
   styles: |
    nav.nav-sidebar a[mn-tab=buckets] {
      animation: playg-animated-underline .8s infinite linear;
    }
    nav.nav-sidebar a[mn-tab=buckets].currentnav {
      animation: none !important;
    }
    body[data-my-first-bucket=n] .header-controls a[ng-click="bucketsCtl.addBucket()"] {
      animation: playg-animated-underline .8s infinite linear;
    }
   checks:
    - document.body.setAttribute('data-my-first-bucket', (q('div[buckets="buckets.details"] .cbui-tablerow-title[title="my-first-bucket"]').tagName && 'y') || 'n') && false
    - q('form input[ng-model="bucketConf.name"]').value == '' && (qLast.value = 'my-first-bucket') && qLast.dispatchEvent && qLast.dispatchEvent(new InputEvent("input")) && false
    - q('div[buckets="buckets.details"] .cbui-tablerow-title[title="my-first-bucket"]').tagName && 'my-first-bucket'
  content: |
   <div>
    Add a new bucket in the <em>east</em>
    that'll be the destination of your data stream.
   </div>
   <div>
    <h3>On the right&nbsp;
        <div style="display: inline-block; transform-origin: left center; transform: scaleX(5);">
          &#x279E;
        </div>
    </h3>
    <ul>
     <li>On the Buckets screen...
         <br/><br/>
     </li>
     <li>Click ADD BUCKET.
         <br/><br/>
     </li>
     <li>In the pre-filled form,
         <br/>
         click Add Bucket.
         <span class="check check-my-first-bucket">&check;</span>
         <style>
           article.checked-e-cluster-my-first-bucket .check-my-first-bucket {
             visibility: visible !important;
           }
         </style>
     </li>
    </ul>
   </div>
   <div>
    <br/>
    <br/>
    <br/>
    <h3>NOTICE</h3>
    Your new bucket is named<br/>
    <code>my-first-bucket</code>
    and has 0 items in it.
    <span class="check check-my-first-bucket">&check;</span>
    <style>
      article.checked-e-cluster-my-first-bucket .check-my-first-bucket {
        visibility: visible !important;
      }
    </style>
   </div>

   <style>
     main.step-destination-east article .left .step-nav button.next {
       z-index: -1;
       opacity: 0.1;
     }

     main.step-destination-east article.checked-e-cluster-my-first-bucket .left .step-nav button.next {
       z-index: 0;
       opacity: initial;
     }
   </style>
 -
  title: Connect the clusters
  panel: w-cluster
  panel-tell:
   clicks:
    - "nav.nav-sidebar a[mn-tab=replications]"
   styles: |
    nav.nav-sidebar a[mn-tab=replications] {
      animation: playg-animated-underline .8s infinite linear;
    }
    nav.nav-sidebar a[mn-tab=replications].currentnav {
      animation: none !important;
    }
    body[data-remote-east=n] .header-controls a:last-child {
      animation: playg-animated-underline .8s infinite linear;
    }
   checks:
    - document.body.setAttribute('data-remote-east', (q('ui-view h4').innerText == 'Remote Clusters' && q('ui-view .cbui-table-cell[title="east"]').tagName && 'y') || 'n') && false
    - q('body[data-remote-east=y]').tagName && 'cluster-connect'
    - q('input#cluster_reference_name').value == '' && (qLast.value = 'east') && qLast.dispatchEvent && qLast.dispatchEvent(new InputEvent('input')) && false
    - q('input#cluster_reference_hostname').value == '' && (qLast.value = '${s[1].ContainerIP}') && qLast.dispatchEvent && qLast.dispatchEvent(new InputEvent('input')) && false
    - (q('input[formcontrolname=username]').value == '' || qLast.value == 'Administrator') && (qLast.value = '${s[1].CBUser}') && qLast.dispatchEvent && qLast.dispatchEvent(new InputEvent('input')) && false
    - q('input[formcontrolname=password]').value == '' && (qLast.value = '${s[1].CBPswd}') && qLast.dispatchEvent && qLast.dispatchEvent(new InputEvent('input')) && false
    - q('.modal-dialog .panel-header h2').innerText == 'Add Remote Cluster' && (document.body.scrollTop = 0) && false
  content: |
   <div>
    In the <em>west</em>&nbsp;cluster (the source cluster),
    create a reference to the <i>east</i>&nbsp;cluster.
   </div>
   <div>
    <h3>On the right&nbsp;
        <div style="display: inline-block; transform-origin: left center; transform: scaleX(5);">
          &#x279E;
        </div>
    </h3>
    <ul>
     <li>On the XDCR (cross-datacenter replication) screen...
         <br/><br/>
     </li>
     <li>Click ADD REMOTE to create the reference to the <i>east</i>.
         <br/><br/>
     </li>
     <li>In the pre-filled form,<br/>
         click Save.
         <span class="check check-cluster-connect">&check;</span>
         <style>
           article.checked-w-cluster-cluster-connect .check-cluster-connect {
             visibility: visible !important;
           }
         </style>
     </li>
    </ul>
   </div>
   <div>
    <br/>
    <br/>
    <h3>NEXT</h3>
    It's time to create an actual data&nbsp;stream!
   </div>

   <style>
     article.checked-w-cluster-cluster-connect .right .diagram .west-east-connect {
       display: block !important;
       background-color: #80c677;
     }
     article.checked-w-cluster-cluster-connect .right .diagram .west-east-check {
       display: block !important;
     }

     main.step-connect-the-clusters article .left .step-nav button.next {
       z-index: -1;
       opacity: 0.1;
     }

     main.step-connect-the-clusters article.checked-w-cluster-cluster-connect .left .step-nav button.next {
       z-index: 0;
       opacity: initial;
     }
   </style>
 -
  title: Add a data stream
  panel: w-cluster
  panel-tell:
   clicks:
    - "nav.nav-sidebar a[mn-tab=replications]"
   styles: |
    nav.nav-sidebar a[mn-tab=replications] {
      animation: playg-animated-underline .8s infinite linear;
    }
    nav.nav-sidebar a[mn-tab=replications].currentnav {
      animation: none !important;
    }
    body[data-rep-east=n] .header-controls a[ng-reflect-state="app.admin.replications.add"] {
      animation: playg-animated-underline .8s infinite linear;
    }
    body[data-h1=XDCRAddReplication] .main-content form.forms .width-10 .formrow.row {
      border: 2px solid red;
      padding: 2px;
    }
    body[data-h1=XDCRAddReplication] .main-content footer.footer-save button[type="submit"] {
      border: 2px solid red;
    }
   checks:
    - document.body.setAttribute('data-h1', q('header > h1 > span:last-child').innerText.trim().replaceAll(' ', '')) && false
    - document.body.setAttribute('data-rep-east', (q('ui-view ng-component div:last-child .cbui-table-header .cbui-table-cell:first-child').innerText == 'source bucket' && q('ui-view ng-component div:last-child .cbui-table-cell[title="beer-sample"]').tagName && 'y') || 'n') && false
    - q('body[data-rep-east=y]').tagName && 'rep-east'
  content: |
   <div>
    In the <em>west</em>&nbsp;cluster, create a data replication stream.
   </div>
   <div>
    <h3>On the right&nbsp;
        <div style="display: inline-block; transform-origin: left center; transform: scaleX(5);">
          &#x279E;
        </div>
    </h3>
    <ul>
     <li>On the XDCR screen...
         <br/><br/>
     </li>
     <li>Click ADD REPLICATION.
         <br/><br/>
     </li>
     <li>For <i>Replicate&nbsp;From&nbsp;Bucket</i>
         <br/>
         &nbsp;&nbsp;use <code class="nowrap">beer-sample</code>
     </li>
     <li>For <i>Remote&nbsp;Bucket</i>
         <br/>
         &nbsp;&nbsp;use <code class="nowrap">my-first-bucket</code>
     </li>
     <li>For <i>Remote&nbsp;Cluster</i>
         <br/>
         &nbsp;&nbsp;use <code class="nowrap">east</code>
         <br/><br/>
     </li>
     <li>Click Save Replication.
         <span class="check check-rep-east">&check;</span>
         <style>
           article.checked-w-cluster-rep-east .check-rep-east {
             visibility: visible !important;
           }
         </style>
     </li>
    </ul>
   </div>
   <div>
    <br/>
    <h3>NOTICE</h3>
    The outgoing data replication stream is now
    <span class="replicating check-rep-east">replicating</span>.
    <span class="check check-rep-east">&check;</span>
   </div>

   <style>
     main.step-add-a-data-stream .right .diagram .west-east-connect {
       display: block !important;
       background-color: #aaa;
     }

     main.step-add-a-data-stream article.checked-w-cluster-rep-east .right .diagram .west-east-connect {
       display: none !important;
     }

     main.step-add-a-data-stream article.checked-w-cluster-rep-east .replicating.check-rep-east {
       font-weight: bold;
     }

     main.step-add-a-data-stream article.checked-w-cluster-rep-east .right .diagram .west-east-stream {
       display: block !important;
     }

     main.step-add-a-data-stream article .left .step-nav button.next {
       z-index: -1;
       opacity: 0.1;
     }

     main.step-add-a-data-stream article.checked-w-cluster-rep-east .left .step-nav button.next {
       z-index: 0;
       opacity: initial;
     }
   </style>
 -
  title: Confirm it's working
  panel: e-cluster
  panel-tell:
   clicks:
    - "nav.nav-sidebar a[mn-tab=buckets]"
   styles: |
    nav.nav-sidebar a[mn-tab=buckets] {
      animation: playg-animated-underline .8s infinite linear;
    }
    nav.nav-sidebar a[mn-tab=buckets].currentnav {
      animation: none !important;
    }
  content: |
   <div>
    Take a look at the
    <em>east</em>&nbsp;cluster.
   </div>
   <div>
    <h3>NOTICE</h3>
     See that your
     <code class="nowrap">my-first-bucket</code>
     <br/>
     has more than 0 <i>items</i>.
   </div>
   <div>
    Your ongoing data&nbsp;stream works!
   </div>

   <style>
     main.step-confirm-its-working .right .diagram .west-east-stream {
       display: block !important;
     }
   </style>
 -
  title: A change in the west
  panel: w-cluster
  panel-tell:
   clicks:
    - nav.nav-sidebar a[ui-sref="app.admin.docs.editor"]
   styles: |
    nav.nav-sidebar a[ui-sref="app.admin.docs.editor"] {
      animation: playg-animated-underline .8s infinite linear;
    }
    nav.nav-sidebar a[ui-sref="app.admin.docs.editor"].currentnav {
      animation: none !important;
    }
    body:not([data-doc-edited=y]) .doc-editor qw-json-table-editor2 .data-table-wrapper form[name=row0Form] .doc-editor-cell > a.square-button:first-child {
      border: 2px solid red;
      animation: playg-animated-border .8s infinite linear;
    }
   checks:
    - q('.modal-dialog form .panel-header h2').innerText == 'Edit Document' && document.body.setAttribute('data-doc-edited', 'y') && false
    - q('body[data-doc-edited=y]').tagName && 'doc-edited'
  content: |
   <div>
    Change a document in the
    <em>west</em>&nbsp;cluster
    to see whether your data&nbsp;stream
    handles mutations.
   </div>
   <div>
    <h3>On the right&nbsp;
        <div style="display: inline-block; transform-origin: left center; transform: scaleX(5);">
          &#x279E;
        </div>
    </h3>
    <ul>
     <li>On the Documents screen...
         <br/><br/>
     </li>
     <li>Select the <code class="nowrap">beer-sample</code> bucket.
         <br/><br/>
     </li>
     <li>Edit <span class="icon fa-pencil"></span> a document
         and save your changes.
     </li>
    </ul>
   </div>

   <style>
     main.step-a-change-in-the-west .right .diagram .west-east-stream {
       display: block !important;
     }

     main.step-a-change-in-the-west article .left .step-nav button.next {
       z-index: -1;
       opacity: 0.1;
     }

     main.step-a-change-in-the-west article.checked-w-cluster-doc-edited .left .step-nav button.next {
       z-index: 0;
       opacity: initial;
     }
   </style>
 -
  title: Will the change go to the east?
  panel: e-cluster
  panel-tell:
   clicks:
    - nav.nav-sidebar a[ui-sref="app.admin.docs.editor"]
   styles: |
    nav.nav-sidebar a[ui-sref="app.admin.docs.editor"] {
      animation: playg-animated-underline .8s infinite linear;
    }
    nav.nav-sidebar a[ui-sref="app.admin.docs.editor"].currentnav {
      animation: none !important;
    }
  content: |
   <div>
    See if your change was replicated to the
    <em>east</em>&nbsp;cluster.
   </div>
   <div>
    <h3>On the right&nbsp;
        <div style="display: inline-block; transform-origin: left center; transform: scaleX(5);">
          &#x279E;
        </div>
    </h3>
    <ul>
     <li>On the Documents screen...
         <br/><br/>
     </li>
     <li>Select the <code class="nowrap">my-first-bucket</code> bucket.
         <br/><br/>
     </li>
     <li>Was your document change propagated to the <em>east</em>?
     </li>
    </ul>
   </div>

   <style>
     main.step-will-the-change-go-to-the-east .right .diagram .west-east-stream {
       display: block !important;
     }
   </style>
 -
  title: Mission success!
  panel: end
  panel-tell:
    clear: true
  content: |
   <div>
    The takeaway...
   </div>
   <div>
    <b>Data streaming</b> between clusters is
    straightforwards with Couchbase.
   </div>
   <div>
    That and more features of Couchbase
    can help you build mission-critical applications
    that are
    <em>flexible</em>,
    <em>distributed</em>,
    and
    <em><span class="nowrap">multi-location</span></em>.
   </div>
   <div>
    Learn more:
    <a href="https://docs.couchbase.com/server/current/learn/clusters-and-availability/xdcr-overview.html"
       target="_blank">
      Cross-datacenter Replication (XDCR) Documentation
    </a>
   </div>
   <div>
    Thanks for playing with Couchbase!
   </div>

   <style>
     main.step-mission-success .right .diagram .west-east-stream {
       display: block !important;
     }
   </style>
