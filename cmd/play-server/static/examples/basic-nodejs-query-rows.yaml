title: NodeJS Query Rows
page: page-03
lang: nodejs
code: |
  const couchbase = require('couchbase')
  
  const cluster = new couchbase.Cluster('couchbase://{{.Host}}', {
    username: '{{.CBUser}}', password: '{{.CBPswd}}'
  })
  
  cluster.bucket('travel-sample')

  const getAirportsByCity = async (city) => {
    try {
      const query = `
        SELECT name, city, state
        FROM \`travel-sample\`
        WHERE type = 'hotel'
          AND city = $CITY LIMIT 5
      `
      const options = {
        parameters: {
          TYPE: 'airline', CITY: city
        }
      }
      let results = await cluster.query(query, options)
      results.rows.forEach((row) => {
        console.log('Query row: ', row)
      })
      return results
    } catch (err) {
      console.error(err)
    }
  }
  
  getAirportsByCity('Malibu')
    .then(() => process.exit(0))
infoAfter: |
  Basic N1QL query, expected to return many rows, we loop 
  through them and console.log() each one. 
  Visit our docs to learn more about <a target="_blank" href="https://docs.couchbase.com/nodejs-sdk/current/howtos/n1ql-queries-with-sdk.html#handling-results">Handling Query Results in Node</a>.