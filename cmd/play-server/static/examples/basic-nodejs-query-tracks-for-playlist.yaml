title: Find Tracks for Playlist
page: page-01
lang: nodejs
infoBefore: |
  NOTE: Indexes must be defined before running these queries.<br><br>
  <div>
  <a href='/examples/basic-nodejs-query-playlist-for-username' class="prev-button">Previous</a>
  <a href='/examples/basic-nodejs-search-find-users' class="next-button">Next</a>
  </div>
  <br>
code: |
  const couchbase = require('couchbase')
  
  const cluster = new couchbase.Cluster('couchbase://{{.Host}}', {
    username: '{{.CBUser}}', password: '{{.CBPswd}}'
  })
  
  const bucket = cluster.bucket('couchmusic2')
  const scope = bucket.scope('couchify')

  const getTracksForPlaylist = async (playlistid) => {
    try {
      const query = `
         SELECT track.*
         FROM playlist
         INNER JOIN track ON KEYS ARRAY trackId FOR trackId IN playlist.tracks END
         WHERE playlist.id = $PLAYLISTID;
      `
      const options = {
        parameters: {
          PLAYLISTID: playlistid
        }
      }
      const result = await scope.query(query, options)
      console.log('Tracks for playlist: ' + playlistid)
      result.rows.forEach((row) => {
          console.log('.  track:', row.title)
        })
    } catch (error) {
      console.error(error)
    }
  }
  
  getTracksForPlaylist('00011b74-12be-4e60-abbf-b1c8b9b40bfe')
    .then(() => process.exit(0))
infoAfter: |
  Placeholders allow you to specify variable constraints for a query.
  This method allows you to use named parameters, pass them to
  cluster.query() method by query and options.
  <br/><br/>
  Visit the docs to learn more about
  <a target="_blank" href="https://docs.couchbase.com/nodejs-sdk/current/howtos/n1ql-queries-with-sdk.html">N1QL Queries with Node.js</a>.
