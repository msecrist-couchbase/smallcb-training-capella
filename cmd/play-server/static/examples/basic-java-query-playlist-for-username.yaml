title: Find Playlists for username
page: page-01
lang: java
infoBefore: |
  NOTE: Indexes must be defined before running these queries.<br><br>
  <div>
  <a href='/examples/basic-java-data-modeling' class="prev-button">Previous</a>
  <a href='/examples/basic-java-query-tracks-for-playlist' class="next-button">Next</a>
  </div>
  <br>
code: |
  import com.couchbase.client.core.error.DocumentNotFoundException;
  import com.couchbase.client.java.*;
  import com.couchbase.client.java.kv.*;
  import com.couchbase.client.java.json.JsonObject;
  import com.couchbase.client.java.query.QueryResult;
  import com.couchbase.client.java.query.QueryOptions;
  import static com.couchbase.client.java.query.QueryOptions.queryOptions;
  
  class Program {
    public static void main(String[] args) {
      var cluster = Cluster.connect(
        "couchbase://{{.Host}}", "{{.CBUser}}", "{{.CBPswd}}"
      );

      try {
         var bucket = cluster.bucket("couchmusic2");
         var scope = bucket.scope("couchify");

         var query = "SELECT playlist.* " +
                          "FROM `playlist` " +
                         "WHERE owner.username = $username ";

        QueryResult result = scope.query(query,
          queryOptions().parameters(
            JsonObject.create()
              .put("username", "stockadeseffusing18695")
          )
        );
        result.rowsAsObject().stream().forEach(
          e-> System.out.println("Playlist Name: " + e.getString("name") +
                                  ", " + "Track count: " + e.getArray("tracks").size())
        );
        
      } catch (DocumentNotFoundException ex) {
        System.out.println("Document not found!");
      }
    }
  }
infoAfter: |
  <strong>Lab 5</strong><br>
  The lab instructions that correspond to this code sample can be found
  <a target="_blank" href="https://e-learning-labs.s3-us-west-2.amazonaws.com/cb131-lab-instructions/05-n1ql-querying.html">here</a>.
  <em>Be sure the indexes have been created per the steps outlined in the instructions.</em><br><br>
  This example uses named parameters passed to the cluster.query()
  method to find all playlist documents for user having the specified
  username.
  This example also shows handling of query results by iterating over each
  result item and printing out.
   <br/><br/>
  Be sure the indexes have been created per the
  <a target="_blank" href="https://e-learning-labs.s3-us-west-2.amazonaws.com/cb131-lab-instructions/04-n1ql-querying.html">lab instructions</a> for lab 4.
  <br/><br/>
  Visit the docs to learn more about
  <a target="_blank" href="https://docs.couchbase.com/java-sdk/current/howtos/n1ql-queries-with-sdk.html">N1QL Queries with Java</a>.
