title:  Upsert 
page: page-03
lang: nodejs
code: |
  const couchbase = require('couchbase')
  
  const cluster = new couchbase.Cluster('couchbase://{{.Host}}', {
    username: '{{.CBUser}}', password: '{{.CBPswd}}'
  })
  
  const bucket = cluster.bucket('travel-sample')
  const collection = bucket.defaultCollection()
  
  const airline = {
    country: 'Iceland', callsign: 'ICEAIR',
    iata: 'FI', icao: 'ICE', id: 123,
    name: 'Icelandair', type: 'airline',
  }
  
  const upsertDocument = async (type, id, doc) => {
    try {
      const upsertResult = await collection.upsert(`${type}_${id}`, doc);
      console.log('Upsert Result: ')
      console.log(upsertResult)
    } catch (err) {
      console.error(err)
    }
  }
  
  const getSubDocument = async (key, field) => {
    try {
      var result = await collection.lookupIn(key, [
        couchbase.LookupInSpec.get(field),
      ])
      var fieldValue = result.content[0].value
  
      console.log('LookupIn Result: ')
      console.log(result)
  
      console.log('Field Value: ')
      console.log(fieldValue)
    } catch (error) {
      console.error(error)
    }
  }
  
  upsertDocument(airline.type, airline.id, airline)
    .then(
      getSubDocument('airline_123', 'name')
        .then(() => process.exit(0))
    )
infoAfter: |
  This example shows an upsert of a document and then a retrieval of a portion of that document via the subdocument API.
  Visit the docs to learn more about
  <a target="_blank" href="https://docs.couchbase.com/nodejs-sdk/current/howtos/kv-operations.html">Key Value Operations in .Node.js</a>.
