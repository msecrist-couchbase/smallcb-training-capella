title: Connect Verification
page: page-05
lang: dotnet
infoBefore: |
  <div>
  <a href='#' class="disable prev-button" style="float:left">Previous</a>
  <a href='/examples/basic-dotnet-kv-insert' class="next-button">Next</a>
  </div>
  <br>
code: |
  using System;
  using System.Linq;
  using System.Threading.Tasks;
  using Couchbase;
  using Couchbase.Core.Exceptions.KeyValue;

  namespace CouchbaseDotNetExample
  {
    class Program
    {
      static async Task Main(string[] args)
      {
        // Connect to the cluster
        var cluster = await Cluster.ConnectAsync(
          "couchbase://{{.Host}}", "{{.CBUser}}", "{{.CBPswd}}"
        );

        // Validate the connection
        var pingResult = await cluster.PingAsync();
        var kvResult = pingResult.Services["kv"];
        var kvStates = kvResult.Select(k => k.State).ToList();
        Console.WriteLine("State: " + kvStates[0]);
       
        // Close connection
        await cluster.DisposeAsync();
      }
    }
  }
infoAfter: |
  <strong>Lab 2</strong><br>
  The lab instructions that correspond to this code sample can be found
  <a target="_blank" href="https://e-learning-labs.s3-us-west-2.amazonaws.com/cb131-lab-instructions/02-key-value.html">here</a>.<br><br>
  If we know a document's key value, we can use the collection.GetAsync(...) method
  passing a key. This returns a JSON result, which can be mapped to any type (including dynamic).
  <br/><br/>
  See more at the SDK documentation on
  <a target="_blank" href="https://docs.couchbase.com/dotnet-sdk/current/howtos/kv-operations.html">.NET Key Value Operations</a>.
