title: Query Rows
page: page-09
lang: go
code: |

  package main

  import (
    "fmt"
    "time"
    "log"
    "encoding/json"
    "github.com/couchbase/gocb/v2"
  )

  func main() {
    cluster, err := gocb.Connect("couchbase://{{.Host}}", gocb.ClusterOptions{
      Authenticator: gocb.PasswordAuthenticator{
        Username: "{{.CBUser}}",
        Password: "{{.CBPswd}}",
      },
    })
    if err != nil {
      panic(err)
    }

    bucket := cluster.Bucket("travel-sample")
    err = bucket.WaitUntilReady(5*time.Second, nil)
    if err != nil {
      panic(err)
    }
    
    results, err := cluster.Query("SELECT x.* FROM `travel-sample` x " +
                                  "WHERE x.`type`=\"hotel\" AND x.name LIKE \"%hotel%\" LIMIT 10", nil)
    if err != nil {
      panic(err)
    }

    var content interface{}
    for results.Next() {
      err := results.Row(&content)
      if err != nil {
        panic(err)
      }
      prettyJSON, err := json.MarshalIndent(content, "", "    ")
      if err != nil {
          log.Fatal("Failed to generate json", err)
      }
      fmt.Printf("%s\n", string(prettyJSON))
    }

    err = results.Err()
    if err != nil {
      panic(err)
    }
  }
infoAfter: |
  Basic N1QL query,
  with looping through each returned row.
  <br/><br/>
  Visit the docs to learn more about
  <a target="_blank" href="https://docs.couchbase.com/go-sdk/current/howtos/n1ql-queries-with-sdk.html#handling-results">Handling Query Results in Go</a>.