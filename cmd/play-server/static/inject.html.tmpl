<style>
#playBox {
  display: block;
  position: absolute;
  top: 0;
  left: 0;
  width: 470px;
  padding: 0 1rem 0 0.5rem;
  background-color: white;
  color: #555;
  font-size: .75rem;
  white-space: nowrap;
  z-index: 11000;
}
#playBox button.playBoxAHToggle {
  display: none;
  height: 1rem;
  min-width: 4rem;
  margin: 1px 0.5rem;
  background-color: #669ee0;
  padding: 0 0.2rem;
  line-height: 1rem;
  font-size: 0.5rem;
}
#playBox button.playBoxAHToggle.playBoxShow {
  display: inline-block;
}
#playBox .playBoxAH {
  display: none;
  position: absolute;
  top: 1.1rem;
  left: 5px;
  min-width: 25rem;
  max-width: 50vw;
  max-height: 90vh;
  border: 1px solid #aaa;
  background-color: white;
  padding: 0 0;
  overflow: hidden;
}
#playBox .playBoxAH.playBoxShow {
  display: block;
}
#playBox .playBoxAHMain {
  height: 100%;
  padding: 1rem 1rem;
  overflow: scroll;
}
#playBox .playBoxAHMain .playBoxAHCard h3 {
  margin-bottom: 0.5rem;
}
#playBox .playBoxAHMain .playBoxAHCard h3 a,
#playBox .playBoxAHMain .playBoxAHCard h4 a {
  margin-left: 6px;
  font-size: 8pt;
}
#playBox .playBoxAHMain .playBoxAHCard h4 {
  margin-left: 4px;
  font-size: 10pt;
}
#playBox .playBoxAHMain .playBoxAHCard pre {
  margin-left: 8px;
  font-size: 8pt;
}
form .playBoxAH {
  margin-left: 0.7rem;
  line-height: 2rem;
}
body.modal-open .panel.dialog .panel-footer .playBoxAH {
  flex-grow: 100;
  margin-left: 0.5rem;
}
</style>

<script type="text/javascript">
var playBoxAPIHelpData;

(function () {
  var checkPlayLoginN = 0;

  function checkPlayLogin() {
    checkPlayLoginN += 1;
    if (checkPlayLoginN > 100) {
      return;
    }

    var params = new URLSearchParams(document.location.search.substring(1));

    var lu = params.get("lu");
    var lp = params.get("lp");

    if (lu != "" && lp != "") {
      var eu = document.getElementById("auth-username-input");
      if (eu && eu.value == "") {
        var ep = document.getElementById("auth-password-input");
        if (ep && ep.value == "") {
          eu.value = lu;
          ep.value = lp;

          // Poke angularJS event handlers.
          eu.dispatchEvent(new InputEvent("input"));
          ep.dispatchEvent(new InputEvent("input"));

          return;
        }
      }

      setTimeout(checkPlayLogin, 200);
    }
  }

  // -------------------------------------------

  // Creates the top-left, high z-index div for the Couchbase Playground,
  // aka, the "playBox", which has a hidden-by-default toggle button
  // and popup for the API Help (AH).
  function createPlayBox() {
    if (!document.body) { return; }

    var el = document.createElement("div");

    el.id = el.className = "playBox";

    el.innerHTML =
      {{if .SessionId}}
        '<a href="http://{{.Host}}:{{.PortApp}}/?s={{.SessionId}}" target="_blank">' +
          'Couchbase Playground</a>'
      {{else}}
        'Couchbase Playground'
      {{end}}
      + `<button id="playBoxAHToggle" class="playBoxAHToggle"
                 onclick="playBoxAHToggle()">
           API Help
         </button>
         <div id="playBoxAH" class="playBoxAH">
           <a class="ui-dialog-titlebar-close modal-close"
              onclick="playBoxAHToggle()">X</a>
           <div class="panel-header">
             <h2>API Help</h2>
           </div>
           <div id="playBoxAHMain" class="playBoxAHMain"/>
         </div>`;

    document.body.appendChild(el);

    setTimeout(checkPlayLogin, 200);

    setTimeout(checkAPIHelp, 2500);
  }

  // -------------------------------------------

  var checkPlayBoxN = 0;

  function checkPlayBox() {
    checkPlayBoxN += 1;
    if (checkPlayBoxN > 20) {
      return;
    }

    var el = document.getElementById("playBox");
    if (!el) {
      createPlayBox();
    }

    setTimeout(checkPlayBox, 500); // Repeatedly try creating the playBox.
  }

  checkPlayBox();

  // -------------------------------------------

  // Holds the rules for the API Help, keyed by
  // window location's hash prefix.
  var apiHelpData = {{.inject_data}};

  playBoxAPIHelpData = apiHelpData; // Global for debugging.

  // -------------------------------------------

  function checkAPIHelp() {
    // Ex: #/overview/stats?scenarioBucket=beer-sample&scenarioZoom=minute&statsHostname=all
    var hashParts = window.location.hash.slice(2).split(/[\?\&]/);

    var keys = [];
    for (let p of hashParts) {
      keys.push(p.split('=')[0]);
    }

    var pbam = document.getElementById("playBoxAHMain");
    if (!pbam) {
      setTimeout(checkAPIHelp, 1000);

      return;
    }

    for (let path of (apiHelpData[keys[0]] || [])) {
      for (let title of (path.titles || [])) {
        var a = [];

        var matches = document.querySelectorAll(title.querySelectorAll);

        for (let x of matches) {
          if (title.check) {
            var ctx = {
              path: path, title: title, x: x, o: null,
              q: function(s) { return document.querySelector(s) || {}; }
            };

            with (ctx) eval('o = ' + title.check);

            if (!ctx.o) {
              continue;
            }
          }

          for (let item of (title.items || [])) {
            var ctx = {
              path: path, title: title, x: x, o: '',
              q: function(s) { return document.querySelector(s) || {}; },
              item: item,
              HOST: "cluster_url", USER: "Administrator", PSWD: "password"
            }

            if (item.tmpl) {
              with (ctx) eval('o = `' + item.tmpl + '`');
            }

            var o = stripEmptyLines(ctx.o || '').replace(/ \\$/, '');

            a.push(`<div>
                      <h4>
                       ${item.item}:
                       ${item.docs ? '<a href="' + item.docs + '" target="_blank">documentation</a>' : ''}
                      </h4>
                      ${item.extra || ''}
                      <pre>${o}</pre>
                    </div>`);
          }
        }

        if (a.length > 0) {
          var h =
            `<div class="playBoxAHCard">
               <h3>
                 ${title.title}
                 ${title.docs ? '<a href="' + title.docs + '" target="_blank">documentation</a>' : ''}
               </h3>
               ${title.extra || ''}
               ${a.join('')}
             </div>`;

          pbam.innerHTML = stripEmptyLines(h);

          document.getElementById("playBoxAHToggle").className = "playBoxAHToggle playBoxShow";

	  var c = document.querySelector('body.modal-open .panel.dialog .panel-footer a[ng-click="$dismiss()"]');
	  if (c && c.innerText.trim() == "Cancel" && !c.previousElementSibling) {
            c.parentNode.insertBefore(apiHelpLink(), c);
          }

          if (title.apiHelpLinkAsLastSibling) {
            var c = document.querySelector(title.apiHelpLinkAsLastSibling);
            if (c && c.parentNode.lastChild.className != "playBoxAH") {
              c.parentNode.appendChild(apiHelpLink());
            }
          }

          setTimeout(checkAPIHelp, 1000);

          return;
        }
      }
    }

    pbam.innerHTML =
      `<div class="playBoxAHCard">
        No API Help available for this feature
       </div>`;

    document.getElementById("playBoxAHToggle").className = "playBoxAHToggle";

    document.getElementById("playBoxAH").className = "playBoxAH";

    setTimeout(checkAPIHelp, 1000);
  }

  function apiHelpLink() {
    var h = document.createElement("span");

    h.className = "playBoxAH";
    h.innerHTML =
      `<a onclick="playBoxAHToggle()">
         API Help <span class="icon fa-question-circle-o"/>
       </a>`;

    return h;
  }

  function stripEmptyLines(s) {
    var lines = [];

    for (var line of s.split('\n')) {
      line = line.trimRight();
      if (line.length > 0) {
        lines.push(line);
      }
    }

    return lines.join('\n');
  }
})()

function playBoxAHToggle() {
  var el = document.getElementById("playBoxAH");
  if (el.className == "playBoxAH") {
    el.className = "playBoxAH playBoxShow";
  } else {
    el.className = "playBoxAH";
  }
}
</script>
