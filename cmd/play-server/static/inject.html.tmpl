<style>
#playg {
  display: block;
  position: absolute;
  top: 0;
  left: 0;
  width: 470px;
  padding: 0 1rem 0 0.5rem;
  background-color: white;
  color: #555;
  font-size: .75rem;
  white-space: nowrap;
  z-index: 11000;
}

#playg button.playgTourToggle,
#playg button.playgHelpToggle {
  display: none;
  height: 1rem;
  min-width: 4rem;
  margin: 1px 0 1px 0.7rem;
  background-color: #669ee0;
  padding: 0 0.2rem;
  line-height: 1rem;
  font-size: 0.5rem;
}

#playg button.playgTourToggle.playgShow,
#playg button.playgHelpToggle.playgShow {
  display: inline-block;
}

#playg .playgHelp {
  display: none;
  position: absolute;
  top: 1.1rem;
  left: 5px;
  min-width: 25rem;
  max-width: 50vw;
  max-height: 90vh;
  border: 1px solid #aaa;
  background-color: white;
  padding: 0 0;
  overflow: hidden;
}
#playg .playgHelp.playgShow {
  display: block;
}

#playg .playgHelpMain {
  height: 100%;
  padding: 1rem 1rem;
  overflow: scroll;
}
#playg .playgHelpMain .playgHelpCard h3 {
  margin-bottom: 0.5rem;
}
#playg .playgHelpMain .playgHelpCard h3 a,
#playg .playgHelpMain .playgHelpCard h4 a {
  margin-left: 6px;
  font-size: 8pt;
}
#playg .playgHelpMain .playgHelpCard h4 {
  margin-left: 4px;
  font-size: 10pt;
}
#playg .playgHelpMain .playgHelpCard pre {
  margin-left: 8px;
  font-size: 8pt;
}

form .playgHelp {
  margin-left: 0.7rem;
  line-height: 2rem;
}

body.modal-open .panel.dialog .panel-footer .playgHelp {
  flex-grow: 100;
  margin-left: 0.5rem;
}

.playgTour {
  display: none;
  flex-basis: 20rem;
  min-height: 600px;
  margin-left: 0.8rem;
  margin-right: 1rem;
  border-right: 1px solid #ececec;
  background-color: #f8f8f8;
  padding: 0.5rem 1rem 1rem 0.75rem;
  z-index: 1;
}
.playgTour.playgShow {
  display: block;
}
.playgTour .modal-close {
  display: inline-block;
  position: relative;
  top: 0;
  left: 0;
  padding: 0.05rem 0.4rem;
  background-color: #669ee0;
  font-size: .8rem;
}

.playgTour .playgTourContent h3,
.playgTour .playgTourContent h4 {
  margin: 0.5rem 0;
}

.playgTour .playgTourContent .playgTourControls {
  margin: 1.75rem 0;
  font-size: .7rem;
}
.playgTour .playgTourContent .playgTourControls button {
  min-width: 3rem;
  height: 1rem;
  background-color: #669ee0;
  padding: 0 0.5rem;
  line-height: 1rem;
  font-size: .7rem;
  color: #fff;
}
.playgTour .playgTourContent .playgTourControls button:disabled {
  background-color: #d4d4d4;
  color: #f4f4f4;
}
.playgTour .playgTourContent .playgTourControls .playgTourPage {
  display: inline-block;
  position: relative;
  line-height: 1rem;
  font-size: .7rem;
  color: #777;
  cursor: pointer;
}
.playgTour .playgTourContent .playgTourControls input[type="checkbox"].playgTourChooser {
}
.playgTour .playgTourContent .playgTourControls div.playgTourChooser {
  display: none;
}
.playgTour .playgTourContent .playgTourControls input#playgTourChooser:checked ~ div.playgTourChooser {
  display: block;
  position: absolute;
  bottom: 15px;
  left: 0px;
  max-height: 70vh;
  margin-bottom: 5px;
  border: 1px solid #aaa;
  background: white;
  padding: 0.5rem 0.5rem;
  overflow: scroll-y;
}
.playgTour .playgTourContent .playgTourControls .playgTourChooser a {
  display: block;
  white-space: nowrap;
}
.playgTour .playgTourContent .playgTourControls .playgTourChooser a:hover {
  background-color: #eee;
}

.playgAppSessionNeed {
  display: none;
}
.playgAppSessionHave .playgAppSessionNeed {
  display: block;
}
</style>

<script type="text/javascript">
var playgApp = {
  host: '{{.Host}}',
  port: '{{.PortApp}}',
  session: '{{.SessionId}}'
};

var playgHelpData = {{.injectData}};

(function () {
  var checkPlayLoginN = 0;

  function checkPlayLogin() {
    checkPlayLoginN += 1;
    if (checkPlayLoginN > 100) {
      return;
    }

    var params = new URLSearchParams(document.location.search.substring(1));

    var lu = params.get("lu");
    var lp = params.get("lp");

    if (lu != "" && lp != "") {
      var eu = document.getElementById("auth-username-input");
      if (eu && eu.value == "") {
        var ep = document.getElementById("auth-password-input");
        if (ep && ep.value == "") {
          eu.value = lu;
          ep.value = lp;

          // Poke angularJS event handlers.
          eu.dispatchEvent(new InputEvent("input"));
          ep.dispatchEvent(new InputEvent("input"));

          return;
        }
      }

      setTimeout(checkPlayLogin, 200);
    }
  }

  // -------------------------------------------

  // Creates the top-left, high z-index div for the Couchbase Playground,
  // or, the "playg", which has hidden-by-default toggle buttons and
  // is also the parent for the API Help popup (playgHelp).
  function createPlayG() {
    if (!document.body) { return; }

    var el = document.createElement("div");

    el.id = el.className = "playg";

    el.innerHTML =
      {{if .SessionId}}
        '<a href="http://{{.Host}}:{{.PortApp}}/?s={{.SessionId}}" target="_blank">' +
          'Couchbase Playground</a>'
      {{else}}
        'Couchbase Playground'
      {{end}}
      + `<button id="playgTourToggle" class="playgTourToggle"
                 onclick="playgTourToggle()">
           Guided Tour
         </button>
         <button id="playgHelpToggle" class="playgHelpToggle"
                 onclick="playgHelpToggle()">
           API Help
         </button>
         <div id="playgHelp" class="playgHelp">
           <a class="ui-dialog-titlebar-close modal-close"
              onclick="playgHelpToggle()">X</a>
           <div class="panel-header">
             <h2>API Help</h2>
           </div>
           <div id="playgHelpMain" class="playgHelpMain"/>
         </div>`;

    document.body.appendChild(el);

    setTimeout(checkPlayLogin, 200);

    setTimeout(checkHelp, 2500);
  }

  // -------------------------------------------

  var checkPlayGN = 0;

  function checkPlayG() {
    checkPlayGN += 1;
    if (checkPlayGN > 20) {
      return;
    }

    var el = document.getElementById("playg");
    if (!el) {
      createPlayG();
    }

    setTimeout(checkPlayG, 500); // Repeatedly try creating the playg.
  }

  checkPlayG();

  // -------------------------------------------

  function checkHelp() {
    if (document.querySelector(".sign-in-background") ||
        !document.querySelector("body .root-container main")) {
      document.getElementById("playgTourToggle").className = "playgTourToggle";

      helpHide();

      setTimeout(checkHelp, 1000);

      return;
    }

    var gt = document.getElementById("playgTourToggle");
    if (gt) {
      gt.className = "playgTourToggle playgShow";
    }

    if (playgTourLocationLoaded < 3 &&
        window.location.search.indexOf("playgTour=") > 0) {
      playgTourLocationLoaded += 1;

      playgTourToggle(true);
    }

    // Ex: #/overview/stats?scenarioBucket=beer-sample
    var hashParts = window.location.hash.slice(2).split(/[\?\&]/);

    var keys = [];
    for (let p of hashParts) {
      keys.push(p.split('=')[0]);
    }

    var pbam = document.getElementById("playgHelpMain");
    if (!pbam) {
      setTimeout(checkHelp, 1000);

      return;
    }

    for (let path of (playgHelpData[keys[0]] || [])) {
      for (let title of (path.titles || [])) {
        var a = [];

        var matches = document.querySelectorAll(title.querySelectorAll);

        for (let x of matches) {
          if (title.check) {
            var ctx = {
              path: path, title: title, x: x, o: null,
              q: function(s) { return document.querySelector(s) || {}; }
            };

            with (ctx) eval('o = ' + title.check);

            if (!ctx.o) {
              continue;
            }
          }

          for (let item of (title.items || [])) {
            var ctx = {
              path: path, title: title, x: x, o: '',
              q: function(s) { return document.querySelector(s) || {}; },
              item: item,
              HOST: "cluster_url", USER: "Administrator", PSWD: "password"
            }

            if (item.tmpl) {
              with (ctx) eval('o = `' + item.tmpl + '`');
            }

            var o = stripEmptyLines(ctx.o || '').replace(/ \\$/, '');

            a.push(`<div>
                      <h4>
                       ${item.item}:
                       ${item.docs ? '<a href="' + item.docs + '" target="_blank">documentation</a>' : ''}
                      </h4>
                      ${item.extra || ''}
                      <pre>${o}</pre>
                    </div>`);
          }
        }

        if (a.length > 0) {
          var h =
            `<div class="playgHelpCard">
               <h3>
                 ${title.title}
                 ${title.docs ? '<a href="' + title.docs + '" target="_blank">documentation</a>' : ''}
               </h3>
               ${title.extra || ''}
               ${a.join('')}
             </div>`;

          pbam.innerHTML = stripEmptyLines(h);

          document.getElementById("playgHelpToggle").className = "playgHelpToggle playgShow";

	  var c = document.querySelector('body.modal-open .panel.dialog .panel-footer a[ng-click="$dismiss()"]');
	  if (c && c.innerText.trim() == "Cancel" && !c.previousElementSibling) {
            c.parentNode.insertBefore(helpLink(), c);
          }

          if (title.helpLinkAsLastSibling) {
            var c = document.querySelector(title.helpLinkAsLastSibling);
            if (c && c.parentNode.lastChild.className != "playgHelp") {
              c.parentNode.appendChild(helpLink());
            }
          }

          setTimeout(checkHelp, 1000);

          return;
        }
      }
    }

    pbam.innerHTML =
      `<div class="playgHelpCard">
        No API Help available for this feature
       </div>`;

    helpHide();

    setTimeout(checkHelp, 1000);
  }

  // -------------------------------------------

  function helpHide() {
    document.getElementById("playgHelpToggle").className = "playgHelpToggle";

    document.getElementById("playgHelp").className = "playgHelp";
  }

  // -------------------------------------------

  function helpLink() {
    var h = document.createElement("span");

    h.className = "playgHelp";
    h.innerHTML =
      `<a onclick="playgHelpToggle()">
         API Help <span class="icon fa-question-circle-o"/>
       </a>`;

    return h;
  }

  // -------------------------------------------

  function stripEmptyLines(s) {
    var lines = [];

    for (var line of s.split('\n')) {
      line = line.trimRight();
      if (line.length > 0) {
        lines.push(line);
      }
    }

    return lines.join('\n');
  }
})()

// -------------------------------------------

function playgHelpToggle() {
  var el = document.getElementById("playgHelp");
  if (el.className == "playgHelp") {
    el.className = "playgHelp playgShow";
  } else {
    el.className = "playgHelp";
  }
}

// -------------------------------------------

var playgTourLocationLoaded = 0;

function playgTourToggle(forceShow) {
  var gt = playgTourCreate();
  if (gt) {
    if (gt.className == "playgTour" || forceShow) {
      gt.className = "playgTour playgShow";
    } else {
      gt.className = "playgTour";
    }
  }
}

// -------------------------------------------

function playgTourCreate() {
  var gt = document.getElementById("playgTour");
  if (!gt) {
    gt = document.createElement("div");

    gt.id = gt.className = "playgTour";

    gt.innerHTML =
      `<div class="${playgApp.session ? 'playgAppSessionHave' : ''}">
         <div>
           Guided Tour
           <a class="modal-close"
              onclick="playgTourToggle()">X</a>
         </div>
         <div id="playgTourContent" class="playgTourContent">
         </div>
       </div>`;

    var m = document.querySelector("main");
    if (!m) { return; }

    m.insertBefore(gt, m.firstChild);

    var params = new URLSearchParams(document.location.search.substring(1));

    var tour = params.get("playgTour").split(',');

    playgTourLoad(tour[0] || "welcome", tour[1] || 0);
  }

  return gt;
}

// -------------------------------------------

var playgTours;

function playgTourLoad(name, part) {
  if (!playgTours) {
    playgTours = JSON.parse(document.getElementById("playgTours").innerText);
  }

  var t = playgTours[name];
  var p = t.parts[part];

  var controls = '';

  if (t.parts.length > 1) {
    chooser = [`<div class="playgTourChooser">`];

    for (var i = 0; i < t.parts.length; i++) {
      chooser.push(`<a onclick="playgTourLoad('${name}', ${i})">${i + 1} - ${t.parts[i].title}</a>`);
    }

    chooser.push(`</div>`);

    controls =
      `<div class="playgTourControls">
         <button onclick="playgTourLoad('${name}', ${part - 1})"
                 ${part <= 0 ? 'disabled' : ''}>
           Previous</button>
         <label class="playgTourPage" for="playgTourChooser">
           <input type="checkbox" name="playgTourChooser" id="playgTourChooser" class="playgTourChooser"/>
           ${chooser.join('')}
           &nbsp;&nbsp;
           ${part + 1} of ${t.parts.length}&nbsp;&#x25BC;
           &nbsp;&nbsp;
         </label>
         <button onclick="playgTourLoad('${name}', ${part + 1})"
                 ${part >= t.parts.length - 1 ? 'disabled' : ''}>
           Next</button>
       </div>`;
  }

  var a = [`<h3>${t.title}</h3>`];

  a.push(`<h4>${p.title}</h4>`);
  a.push(p.content);
  a.push(controls);

  document.getElementById("playgTourContent").innerHTML = a.join('');

  for (let a of document.querySelectorAll('.playgTourContent a[data-playg="app"]')) {
    // Ex: '/foo/bar' turns into 'foo/bar'.
    var href = (a.href || '').replace(/^\//, '');

    a.href = `http://${playgApp.host}:${playgApp.port}/${href}?s=${playgApp.session}`;
  }
}
</script>

<script id="playgTours" type="application/json">
{{.tours}}
</script>
