# Copy init-couchbase files into image.

RUN mkdir -p /init-couchbase
COPY init-couchbase /init-couchbase
RUN chmod +x /init-couchbase/*.sh && \
    /init-couchbase/prep.sh

# Append to /opt/couchbase/etc/couchbase/static_config...

RUN if [ ! -d /opt/couchbase/etc/couchbase ]; then mkdir -p /opt/couchbase/etc/couchbase; fi \
    && cat /init-couchbase/init-static-config.txt >> \
        /opt/couchbase/etc/couchbase/static_config

# ------------------------------------------------
# Copy play-server's run-*.sh files into image.

COPY cmd/play-server/run-*.sh /
RUN chmod +x /run-*.sh

# ------------------------------------------------
# Create the play user for SDK installs & user-submitted code.

RUN useradd -u 1001 -g couchbase -m play

# ------------------------------------------------
# SDK nodejs.

USER play

RUN echo "prefix = /home/play/npm_packages" >> ~/.npmrc && \
    PATH=/home/play/npm-packages/bin:$PATH \
    NODE_PATH=/home/play/npm-packages/lib/node_modules:$NODE_PATH \
    NPM_PACKAGES=/home/play/npm-packages \
    npm install -g couchbase ottoman gritty

USER root

RUN npm show couchbase | grep latest | cut -f 2 -d ' ' > /opt/couchbase/VERSION-sdk-nodejs.ver

# ------------------------------------------------
# SDK java.

# Copy maven shared files and build hello.java to warm up mvn caches.

COPY --from=maven /usr/share/maven /usr/share/maven

RUN ln -s /usr/share/maven/bin/mvn /usr/bin/mvn

COPY cmd/play-server/run-java-pom.xml /run-java-pom.xml

COPY cmd/play-server/run-java-hello.java /home/play/hello/src/main/java/hello.java

RUN chown -R play:couchbase /home/play

USER play

RUN cp /run-java-pom.xml /home/play/hello/pom.xml && \
    cd /home/play/hello && \
    mvn package && \
    mvn dependency:build-classpath -Dmdep.outputFile=classpath.txt

USER root

RUN cat /run-java-pom.xml | grep 'version>3' | cut -f 2 -d '>' | cut -f 1 -d '<' > /opt/couchbase/VERSION-sdk-java.ver

# ------------------------------------------------
# SDK .NET.

COPY cmd/play-server/run-csharp-hello.csproj /home/play/hellodotnet/run-csharp-hello.csproj

COPY cmd/play-server/run-csharp-hello.cs /home/play/hellodotnet/run-csharp-hello.cs

RUN chown -R play:couchbase /home/play

USER play

RUN cd /home/play/hellodotnet && \
    dotnet build

USER root

RUN tr ' ' '\n' < /home/play/hellodotnet/run-csharp-hello.csproj | grep Version | cut -f 2 -d '"' > /opt/couchbase/VERSION-sdk-dotnet.ver

# ------------------------------------------------
# SDK PHP.
USER root
RUN echo ${COUCHBASE_SDK_PHP_VERSION} > /opt/couchbase/VERSION-sdk-php.ver

# ------------------------------------------------
# SDK scala.

COPY cmd/play-server/run-scala-build.sbt /home/play/helloscala/build.sbt
COPY cmd/play-server/run-scala-build.sbt /run-scala-build.sbt
COPY cmd/play-server/run-scala-pom.xml /home/play/helloscala/run-scala-pom.xml
RUN mkdir /scala && \
    sed -i -e "s/1.1.2/${COUCHBASE_SDK_SCALA_VERSION}/g" -e "s/2.12.12/${SCALA_VERSION}/g" /home/play/helloscala/build.sbt && \
    sed -i -e "s/1.1.2/${COUCHBASE_SDK_SCALA_VERSION}/g" -e "s/2.12/`echo ${SCALA_VERSION}|cut -f1-2 -d'.'`/g" /home/play/helloscala/run-scala-pom.xml
COPY cmd/play-server/run-scala-hello.scala /home/play/helloscala/run-scala-hello.scala
COPY cmd/play-server/run-scala-hello.scala /tmp/helloscala/run-scala-hello.scala
RUN /run-scala-sbt.sh /tmp/helloscala && \
    rm -rf /tmp/helloscala
RUN chown -R play:couchbase /home/play
USER play
RUN cd /home/play/helloscala && \
    sbt run
USER root
RUN echo ${COUCHBASE_SDK_SCALA_VERSION} > /opt/couchbase/VERSION-sdk-scala.ver

# ------------------------------------------------
# SDK ruby.
USER root
RUN echo ${COUCHBASE_SDK_RUBY_VERSION} > /opt/couchbase/VERSION-sdk-ruby.ver

# ------------------------------------------------
# SDK go.
USER root
RUN go list -m github.com/couchbase/gocb/v2 |cut -f2 -d' '|sed 's/v//g' >/opt/couchbase/VERSION-sdk-go.ver

# ------------------------------------------------
# SDK C.
COPY cmd/play-server/run-cc.makefile run-cc.makefile
COPY cmd/play-server/run-cc.cmakelists run-cc.cmakelists
RUN cbc version |head -3 |egrep 'Runtime'|cut -f4 -d' '|cut -f2 -d'='|cut -f1 -d',' >/opt/couchbase/VERSION-sdk-c.ver

# ------------------------------------------------
# couchbase shell, via a cbsh user.

RUN apt-get install -y libxcb-composite0-dev

RUN useradd -u 1002 -g couchbase -m cbsh

USER cbsh

ENV CBSH_VERSION 0.5.0

RUN mkdir -p /home/cbsh && \
    cd /home/cbsh && \
    wget https://github.com/couchbaselabs/couchbase-shell/releases/download/v${CBSH_VERSION}/cbsh-${CBSH_VERSION}-linux.zip && \
    unzip cbsh-*-linux.zip && \
    tar -xzvf cbsh-linux-x86_64.tar.gz && \
    rm *.zip && rm *.gz

USER root

RUN chown -R cbsh:couchbase /home/cbsh
